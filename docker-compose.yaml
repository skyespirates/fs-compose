name: doker-kompos

services:
  frontend:
    # image: skyespirates/compose-frontend
    build: ./frontend
    ports:
      - 4444:80
    networks:
      - my-network
    depends_on:
      - backend

  backend:
    # image: skyespirates/compose-backend
    build: ./backend
    ports:
      - 3001:3001
    networks:
      - my-network
    depends_on:
      - monggodebe
      - cache
    # environment:
    #   - MONGO_URL=mongodb://kiwkiw:27017/mydb
    env_file:
      - ./backend/.env

  some-service:
    # image: skyespirates/compose-some-service
    build: ./some-service
    ports:
      - 3002:3002
    networks:
      - my-network
    depends_on:
      maisekuel:
        condition: service_healthy # make sure mysql container is ready before running this service
      cache:
        condition: service_started
    env_file:
      - ./some-service/.env

  monggodebe:
    image: mongo
    ports:
      - 27017:27017
    restart: unless-stopped
    networks:
      - my-network
    volumes:
      - mongo_data:/data/db

  maisekuel:
    image: mysql
    ports:
      - 3306:3306
    restart: unless-stopped
    networks:
      - my-network
    volumes:
      - mysql_data:/var/lib/mysql
    environment:
      - MYSQL_ROOT_PASSWORD=secret
    healthcheck: # healthcheck mechanism
      test:
        ["CMD-SHELL", "mysqladmin ping -h 127.0.0.1 -P 3306 -u root -psecret"]
      interval: 10s
      retries: 5

  cache:
    image: redis
    ports:
      - 6379:6379
    restart: unless-stopped
    networks:
      - my-network
    volumes:
      - redis_data:/data

networks:
  my-network:

volumes:
  mongo_data:
  redis_data:
  mysql_data:
